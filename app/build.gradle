//plugins {
//    id 'com.android.application'
//    id 'org.jetbrains.kotlin.android' // 如果使用Kotlin,这个需要加上
//}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"

android {
//    namespace "com.qiandai.zhudb" 相当于以前老版本manifest清单文件的package
//    <manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.qiandai.zhudb">
    compileSdkVersion androidID.compileSdkVersion

    defaultConfig {
        applicationId appID.applicationId
        minSdkVersion androidID.minSdkVersion
        targetSdkVersion androidID.targetSdkVersion
        versionCode androidID.versionCode
        versionName androidID.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        vectorDrawables {
//            useSupportLibrary true
//        }

        buildConfigField('boolean', 'isRelease', String.valueOf(isRelease))
    }

    signingConfigs {
        release {
            def signing = getSigning()
            storeFile file("../keystore.jks")
            storePassword signing["storePassword"]
            keyAlias signing["keyAlias"]
            keyPassword signing["keyPassword"]
        }

        debug {
            storeFile file('../debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }

        debug {
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
//    buildFeatures {
//        compose true
//    }
//    composeOptions {
//        kotlinCompilerExtensionVersion '1.4.3'
//    }
//    packaging {
//        resources {
//            excludes += '/META-INF/{AL2.0,LGPL2.1}'
//        }
//    }
}

//读取本地文件
Map<String, String> getSigning() {
    def map = new HashMap<String, String>()
    def br = new BufferedReader(new InputStreamReader(new FileInputStream("${rootProject.rootDir.absolutePath}/keystore.jks.txt")))
    3.times {
        def strings = br.readLine().split(":")
        map.put(strings[0], strings[1])
    }
    br.close()
    return map
}

dependencies {

    dependenciesID.each { k, v -> implementation v }
//    implementation 'androidx.activity:activity-compose:1.7.0'
//    implementation platform('androidx.compose:compose-bom:2023.03.00')
//    implementation 'androidx.compose.ui:ui'
//    implementation 'androidx.compose.ui:ui-graphics'
//    implementation 'androidx.compose.ui:ui-tooling-preview'
//    implementation 'androidx.compose.material3:material3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
//    androidTestImplementation platform('androidx.compose:compose-bom:2023.03.00')
//    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
//    debugImplementation 'androidx.compose.ui:ui-tooling'
//    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    if (isRelease) {
        implementation project(':baselibrary')
        implementation project(':uilibrary')
    }
}